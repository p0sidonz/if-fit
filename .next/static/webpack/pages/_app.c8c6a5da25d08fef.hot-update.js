"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/modules/chat/chatSlice.js":
/*!***************************************!*\
  !*** ./src/modules/chat/chatSlice.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addMessage\": function() { return /* binding */ addMessage; },\n/* harmony export */   \"appChatSlice\": function() { return /* binding */ appChatSlice; },\n/* harmony export */   \"createChat\": function() { return /* binding */ createChat; },\n/* harmony export */   \"fetchChatsContacts\": function() { return /* binding */ fetchChatsContacts; },\n/* harmony export */   \"fetchUserProfile\": function() { return /* binding */ fetchUserProfile; },\n/* harmony export */   \"makeMessagesSeen\": function() { return /* binding */ makeMessagesSeen; },\n/* harmony export */   \"removeSelectedChat\": function() { return /* binding */ removeSelectedChat; },\n/* harmony export */   \"selectChat\": function() { return /* binding */ selectChat; },\n/* harmony export */   \"sendMsg\": function() { return /* binding */ sendMsg; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* harmony import */ var _utils_socket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/socket */ \"./src/utils/socket.js\");\n/* harmony import */ var _utils_axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/axios */ \"./src/utils/axios.js\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n\n\n\n\nconst createChat = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"appChat/createChat\", async (id, param)=>{\n    let { dispatch: dispatch1  } = param;\n    try {\n        const response = await _utils_axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"/chat/createchat\", {\n            user_id: id\n        });\n        return await dispatch1(selectChat(response.data.result.id));\n    } catch (error) {\n        console.log(\"error\", error);\n    }\n});\nconst fetchUserProfile = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"appChat/fetchUserProfile\", async ()=>{\n    const { data  } = await _utils_axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"/users/me\");\n    console.log(\"response\", data.user.id);\n    return {\n        id: data.user.id,\n        avatar: null,\n        fullName: data.user.first_name,\n        status: \"offline\"\n    };\n});\nconst fetchChatsContacts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"appChat/fetchChatsContacts\", async ()=>{\n    const response = await _utils_axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"/chat/getContacts\");\n    return {\n        chatsContacts: response.data.chatsContacts,\n        contacts: response.data.contacts\n    };\n});\nconst selectChat = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"appChat/selectChat\", async (// id, { dispatch, getState, skip, take}\nnotsure)=>{\n    console.log(\"notsure\", notsure);\n    debugger;\n    // Uncomment when you are ready to fetch messages\n    const response = await _utils_axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"/chat/getMessages/\".concat(1));\n    await dispatch(fetchChatsContacts());\n    return response.data;\n});\nconst sendMsg = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"appChat/sendMsg\", async (obj, param)=>{\n    let { dispatch: dispatch1  } = param;\n    const userId = JSON.parse(localStorage.getItem(\"userData\")).id;\n    (0,_utils_socket__WEBPACK_IMPORTED_MODULE_0__.sendMessage)({\n        message: obj.message,\n        chatId: obj.chat.id,\n        recipientId: userId,\n        otherUser: obj.contact.id\n    });\n});\nconst appChatSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createSlice)({\n    name: \"appChat\",\n    initialState: {\n        chats: null,\n        contacts: null,\n        userProfile: null,\n        selectedChat: null\n    },\n    reducers: {\n        removeSelectedChat: (state)=>{\n            state.selectedChat = null;\n        },\n        addMessage: (state, action)=>{\n            var _currentState_chat, _action_payload;\n            console.log(\"payload \", action.payload);\n            const { chatId , message  } = action.payload;\n            const hm = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.current)(state);\n            const currentState = hm.selectedChat;\n            const selectedChat = {\n                ...currentState\n            };\n            // if (currentState?.chat?.id === message.chatId) {\n            // }\n            if ((currentState === null || currentState === void 0 ? void 0 : (_currentState_chat = currentState.chat) === null || _currentState_chat === void 0 ? void 0 : _currentState_chat.id) === (action === null || action === void 0 ? void 0 : (_action_payload = action.payload) === null || _action_payload === void 0 ? void 0 : _action_payload.chatId)) {\n                const selectedChat = {\n                    ...currentState\n                };\n                // console.log(selectedChat.chat.chat.push(message));\n                state.selectedChat = {\n                    ...selectedChat,\n                    chat: {\n                        ...selectedChat.chat,\n                        chat: [\n                            ...selectedChat.chat.chat,\n                            action.payload\n                        ]\n                    }\n                };\n                // If the recipient has the chat open, emit the 'isSeen' event\n                (0,_utils_socket__WEBPACK_IMPORTED_MODULE_0__.seenMessage)({\n                    recipientId: hm.selectedChat.contact.id,\n                    chatId: chatId,\n                    senderId: action.payload.senderId,\n                    isTrue: true\n                });\n                let updatedChats = hm.chats.map((chat)=>{\n                    if (chat.chat.id === chatId) {\n                        return {\n                            ...chat,\n                            chat: {\n                                ...chat.chat,\n                                lastMessage: action.payload\n                            }\n                        };\n                    }\n                    return chat;\n                });\n                state.chats = updatedChats;\n            } else {\n                let updatedChats = hm.chats.map((chat)=>{\n                    if (chat.chat.id === chatId) {\n                        return {\n                            ...chat,\n                            chat: {\n                                ...chat.chat,\n                                lastMessage: action.payload\n                            }\n                        };\n                    }\n                    return chat;\n                });\n                state.chats = updatedChats;\n            //make this chat at the top\n            // let updatedContacts = hm.contacts.map((contact) => {\n            //   if (contact.id === action.payload.contact.id) {\n            //     return {\n            //       ...contact,\n            //       chat: {\n            //         ...contact.chat,\n            //         lastMessage: action.payload,\n            //       }\n            //     };\n            //   }\n            //   return contact;\n            // });\n            }\n        },\n        makeMessagesSeen: (state, action)=>{\n            var _currentState_selectedChat, _currentState_selectedChat_chat;\n            const { chatId , senderId , recipientId  } = action.payload;\n            const currentState = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.current)(state);\n            // Update selectedChat messages if the chatId matches\n            if (((_currentState_selectedChat = currentState.selectedChat) === null || _currentState_selectedChat === void 0 ? void 0 : (_currentState_selectedChat_chat = _currentState_selectedChat.chat) === null || _currentState_selectedChat_chat === void 0 ? void 0 : _currentState_selectedChat_chat.id) === chatId) {\n                const updatedMessages = currentState.selectedChat.chat.chat.map((message)=>message.senderId === recipientId ? {\n                        ...message,\n                        feedback: {\n                            ...message.feedback,\n                            isSeen: true\n                        }\n                    } : message);\n                state.selectedChat = {\n                    ...currentState.selectedChat,\n                    chat: {\n                        ...currentState.selectedChat.chat,\n                        chat: updatedMessages\n                    }\n                };\n            }\n        // Update the last message in the chats array if the chatId matches\n        // let idk = currentState.chats.map((chat) =>\n        //   chat.chat.id === chatId\n        //     ? {\n        //         ...chat,\n        //         chat: {\n        //           ...chat.chat,\n        //           lastMessage: {\n        //             ...chat.chat.lastMessage,\n        //             isSeen: true,\n        //           },\n        //         },\n        //       }\n        //     : chat\n        // );\n        // state.chats = idk;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchUserProfile.fulfilled, (state, action)=>{\n            state.userProfile = action.payload;\n        });\n        builder.addCase(fetchChatsContacts.fulfilled, (state, action)=>{\n            state.contacts = action.payload.contacts;\n            state.chats = action.payload.chatsContacts;\n        });\n        builder.addCase(selectChat.fulfilled, (state, action)=>{\n            state.selectedChat = action.payload;\n        });\n    }\n});\nconst { removeSelectedChat , addMessage , makeMessagesSeen  } = appChatSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (appChatSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/chat/chatSlice.js\n"));

/***/ })

});